environments: 2
namespace_name: "practice-namespace"
environment: "production"
replicas: 1
machines:
  - kali
  - ubuntu
  - ubuntu
kali_config:
  image: "kalilinux/kali-rolling"
  service_account: True
  firewall_enabled: True
  config_map_enabled: False
  service_account_name: "kali-service-account"
  container_commands:
    - apt-get update && apt-get install -y iputils-ping net-tools
    - while true; do sleep 30; done
  env:
    - name: "KALI_ENV_VAR"
      value: "some_value"
  ports:
    - container_port: 22
      target_port: 22
      service_port: 22
  service_type: "LoadBalancer"
  role_rules:
    - api_groups: '[""]'
      resources: '["pods"]'
      verbs: '["get", "watch", "list"]'
  firewall_label: kali
  network_policy:
    types:
      - "Ingress"
      - "Egress"
    ingress:
      - action: Deny
    egress:
      - action: Allow
        protocol: TCP
        destination:
          nets:
            - 0.0.0.0/0
      - action: Allow
        protocol: UDP
        destination:
          ports:
            - 53
      - action: Allow
        protocol: ICMP

ubuntu_config:
  image: "ubuntu:latest"
  service_account: True
  firewall_enabled: True
  config_map_enabled: False
  service_account_name: "ubuntu-service-account"
  container_commands:
    - apt-get update && apt-get install -y iputils-ping net-tools
    - while true; do sleep 30; done
  env:
    - name: "UBUNTU_ENV_VAR"
      value: "another_value"
  ports:
    - container_port: 80
      target_port: 80
      service_port: 80
  service_type: "ClusterIP"
  role_rules:
    - api_groups: '[""]'
      resources: '["pods"]'
      verbs: '["get", "watch", "list"]'
  firewall_label: "ubuntu"
  network_policy:
    types:
      - "Ingress"
      - "Egress"
    ingress:
      - action: Allow
        protocol: ICMP
    egress:
      - action: Deny
