apiVersion: v1
kind: ServiceAccount
metadata:
  name: "kali-service-account"
  namespace: "test-namespace-2"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "kali-2-1-deployment"
  namespace: "test-namespace-2"
  labels:
    app: "kali-2-1"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "kali-2-1"
  template:
    metadata:
      labels:
        app: "kali-2-1"
    spec:
      
      serviceAccountName: "kali-service-account"
      
      containers:
        - image: "kali:latest"
          env:
            - name: "KALI_ENV_VAR"
              value: "some_value"
          
          command: ["/bin/bash", "-c"]
          args:
            - |
              apt-get update && apt-get install -y openssh-server openssh-client
              ssh-keygen -t rsa -f /root/.ssh/id_rsa -N ""
              cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
          
          imagePullPolicy: Always
          name: "kali-2-1"
          ports:
            - containerPort: 22
              protocol: TCP
---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "kali-2-1-role"
  namespace: "test-namespace-2"
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "kali-2-1-rolebinding"
  namespace: "test-namespace-2"
subjects:
  - kind: ServiceAccount
    name: "kali-service-account"
    namespace: "test-namespace-2"
roleRef:
  kind: Role
  name: "kali-2-1-role"
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: v1
kind: Service
metadata:
  name: "kali-2-1-service"
  namespace: "test-namespace-2"
  labels:
    app: "kali-2-1"
spec:
  ports:
    - port: 8080
      targetPort: 22
  selector:
    app: "kali-2-1"
  type: "LoadBalancer"